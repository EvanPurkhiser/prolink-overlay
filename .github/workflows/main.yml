name: build
on: [push]

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - os: ubuntu-latest
          ext: tar.gz
        - os: windows-latest
          ext: exe
        - os: macos-latest
          ext: dmg
    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1

      # Build
      - run: yarn install
      - run: yarn build-main
      - run: yarn build-renderer
      - run: yarn dist

      # Uplaod built artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: ${{ github.workspace }}/release/*.${{ matrix.ext }}
  publish:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v2
        with:
          path: release
      - name: Locate release files
        id: locate
        run: |
          echo ::set-output name=macos::$(ls ${{ github.workspace }}/release/macos-latest/*)
          echo ::set-output name=ubuntu::$(ls ${{ github.workspace }}/release/ubuntu-latest/*)
          echo ::set-output name=windows::$(ls ${{ github.workspace }}/release/windows-latest/*)
      - name: Release latest master
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: master-build
          prerelease: true
          title: Development Build
          files: |
           ${{ steps.locate.outputs.macos }}
           ${{ steps.locate.outputs.ubuntu }}
           ${{ steps.locate.outputs.windows }}
      - name: Release new version
        if: startsWith(github.ref, 'refs/tags/v')
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
           ${{ steps.locate.outputs.macos }}
           ${{ steps.locate.outputs.ubuntu }}
           ${{ steps.locate.outputs.windows }}
